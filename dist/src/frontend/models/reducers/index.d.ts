/***********************************************
 *                                              *
 *     Combined Reducers for main application   *
 *     Generated by ts2redux                    *
 *                                              *
 ***********************************************/
import * as redux from "redux";
import { IGenericModel } from "./GenericModel";
import { IIncModel } from "./IncModel";
import { ISimpleModel } from "./SimpleModel";
import { ITestModel } from "./TestModel";
import { ITetrisModel } from "./TetrisModel";
import { ITodoList } from "./TodoList";
import { IUIHelperModel } from "./UIHelperModel";
import { IUserState } from "./UserState";
import { IWaspModel } from "./WaspModel";
export interface IState {
    GenericModel: IGenericModel;
    IncModel: IIncModel;
    SimpleModel: ISimpleModel;
    TestModel: ITestModel;
    TetrisModel: ITetrisModel;
    TodoList: ITodoList;
    UIHelperModel: IUIHelperModel;
    UserState: IUserState;
    WaspModel: IWaspModel;
}
export declare const reducerObject: {
    GenericModel: (state: IGenericModel, action: any) => IGenericModel;
    IncModel: (state: IIncModel, action: any) => IIncModel;
    SimpleModel: (state: ISimpleModel, action: any) => ISimpleModel;
    TestModel: (state: ITestModel, action: any) => ITestModel;
    TetrisModel: (state: ITetrisModel, action: any) => ITetrisModel;
    TodoList: (state: ITodoList, action: any) => ITodoList;
    UIHelperModel: (state: IUIHelperModel, action: any) => IUIHelperModel;
    UserState: (state: IUserState, action: any) => IUserState;
    WaspModel: (state: IWaspModel, action: any) => IWaspModel;
};
export declare const reducers: redux.Reducer<IState, redux.AnyAction>;
